{"version":3,"sources":["actions/index.js","components/Todo/todo-item.js","reducers/todos-reducer.js","reducers/category-reducer.js","reducers/index.js","reducers/total-reducer.js","reducers/points-reducer.js","components/Navbar/navbar.js","components/Footer/footer.js","components/Todo/add-todo.js","components/Todo/show-todo.js","components/Todo/todo-list.js","components/Todo/point-total.js","components/App.js","serviceWorker.js","index.js"],"names":["addTodo","title","points","category","type","payload","TodoItem","this","completed","todoReducer","state","action","map","item","i","index","slice","categoryReducer","combineReducers","todos","total","Navbar","className","Component","Footer","href","connect","props","useState","setTitle","score","setScore","setCategory","onChange","e","target","value","onClick","pts","parseInt","cat","String","ShowTodo","dispatch","useDispatch","buttonClass","check","class","undoTodo","completeTodo","deleteTodo","TodoList","console","log","todo","key","getList","PointTotal","useSelector","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","reducers","subscribe","stringify","setItem","saveState","getState","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.06d125e5.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\"\nexport const EDIT_TODO = \"EDIT_TODO\"\nexport const COMPLETE_TODO = \"COMPLETE_TODO\"\nexport const DELETE_TODO = \"DELETE_TODO\"\nexport const UNDO_TODO = 'UNDO_TODO'\nexport const CLEAR_TOTAL = 'CLEAR_TOTAL'\nexport const ADD_CATEGORY = 'ADD_CATEGORY'\n\nexport const addTodo = (title, points, category) => {\n    return {\n        type: ADD_TODO,\n        payload: { title, points, category }\n    }\n}\n\nexport const editTodo = (index, title) => {\n    return {\n        type: EDIT_TODO,\n        payload: { index, title }\n    }\n}\n\nexport const completeTodo = (index, points) => {\n    return {\n        type: COMPLETE_TODO,\n        payload: { index, points }\n    }\n}\n\nexport const deleteTodo = (index) => {\n    return {\n        type: DELETE_TODO,\n        payload: { index }\n    }\n}\n\nexport const undoTodo = (index, points) => {\n    return {\n        type: UNDO_TODO,\n        payload: { index, points }\n    }\n}\n\nexport const clearTotal = () => {\n    return {\n        type: CLEAR_TOTAL,\n    }\n}\n\nexport const addCategory = (category) => {\n    return {\n        type: ADD_CATEGORY,\n        payload: { category }\n    }\n}\n\n\n","class TodoItem {\n    constructor(title, points = 1, category = '') {\n        this.title = title;\n        this.completed = false;\n        this.points = points;\n        this.category = category;\n    }\n}\n\nexport default TodoItem","import { ADD_TODO, EDIT_TODO, COMPLETE_TODO, DELETE_TODO, UNDO_TODO, ADD_CATEGORY } from '../actions'\nimport TodoItem from '../components/Todo/todo-item'\n// can change state from array to object (with properties like todo list and\n// point; need to delete data from local storage if I change object\nconst todoReducer = (state=[], action) => {\n    switch (action.type) {\n        case ADD_TODO:\n            const { title, points, category } = action.payload;\n            return [...state, new TodoItem(title, points, category)]\n\n        case EDIT_TODO:\n            return state.map((item, i) => {\n                if (i !== action.payload.index) {\n                    return item\n                }\n                return {...item, ...action.payload}\n            })\n\n        case COMPLETE_TODO:\n            return state.map((item, i) => {\n                if (i !== action.payload.index) {\n                    return item\n                }\n                return {...item, completed : !item.completed}\n            })\n\n        case DELETE_TODO:\n            const { index } = action.payload\n            return [...state.slice(0, index), ...state.slice(index +1)]\n\n        case UNDO_TODO:\n            return state.map((item, i) => {\n                if (i !== action.payload.index) {\n                    return item\n                }\n                return {...item, completed : !item.completed}\n            })\n\n        case ADD_CATEGORY:\n            return action.payload.category\n\n\n        default:\n            return state\n    }\n}\n\nexport default todoReducer","import { ADD_TODO } from '../actions'\n\n\nconst categoryReducer = (state=\" \", action) => {\n    switch (action.type) {\n        case ADD_TODO:\n            state = `${action.payload.category}`\n            return state\n\n        default:\n            return state\n    }\n}\n\nexport default categoryReducer","import { combineReducers } from 'redux'\nimport todoReducer from './todos-reducer'\nimport totalReducer from './total-reducer'\nimport pointsReducer from './points-reducer'\nimport categoryReducer from './category-reducer'\n\nexport default combineReducers(\n    {\n        todos: todoReducer,\n        total: totalReducer,\n        points: pointsReducer,\n        category: categoryReducer,\n    }\n)","import { COMPLETE_TODO, UNDO_TODO, CLEAR_TOTAL } from '../actions'\n\nexport default function (state = 0, action) {\n    switch(action.type) {\n        case COMPLETE_TODO:\n            state += action.payload.points\n            return state\n\n        case UNDO_TODO:\n            if(state > 0) {\n                state -= action.payload.points\n            }\n            return state\n\n        case CLEAR_TOTAL:\n            return 0\n\n        default:\n            return state\n    }\n}","import { ADD_TODO } from '../actions'\n\nexport default function (state = 0, action) {\n    switch(action.type) {\n        case ADD_TODO:\n            state += action.payload.points\n            return state\n\n        default:\n            return state\n    }\n}","import React, { Component } from 'react';\nimport './navbar.css'\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <div className='navbar'>\n                <ul>\n                    <li>\n                        <h3>Tada!</h3>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Navbar","import React, { Component } from 'react'\nimport './footer.css'\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div className='footer'>\n                <ul>\n                    <li><a href='https://github.com/stasi815/TaDa-'>GitHub</a></li>\n                </ul>\n\n                <ul>\n                    <li><a href='https://www.linkedin.com/in/anastasia-gallardo-5182ab192/'>LinkedIn</a></li>\n                </ul>\n\n                <ul>\n                    <li><a href='https://www.makeschool.com/'>Make School</a></li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Footer","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../../actions';\nimport './add-todo.css'\n\nfunction AddTodo(props) {\n    const [ title, setTitle ] = useState('Todo')\n    const [ score, setScore ] = useState(0)\n    const [ category, setCategory ] = useState('Category')\n\n    return (\n        <div className='add-todo'>\n            <h3 className='directive'>\n                Add Your Task:\n            </h3>\n            <div className='input'>\n                <input\n                    type='text'\n                    onChange={(e) => {\n                        setTitle(e.target.value)\n                    }}\n                    value={ title }\n                />\n                <div className=\"select-div\">\n                    <select className='point-select' value={ score } onChange={(e) => {\n                            setScore(e.target.value)\n                        }}>\n                        <option value=\"0\">Select points:</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                        <option value=\"6\">6</option>\n                        <option value=\"7\">7</option>\n                        <option value=\"8\">8</option>\n                        <option value=\"9\">9</option>\n                        <option value=\"10\">10</option>\n                    </select>\n                    <select className='cat-select'  value={ category } onChange={(e) => {\n                            setCategory(e.target.value)\n                        }}>\n                        <option value=\"0\">Select category:</option>\n                        <option value=\"Health\">Health</option>\n                        <option value=\"School\">School</option>\n                        <option value=\"Work\">Work</option>\n                        <option value=\"Art\">Art</option>\n                        <option value=\"Spirituality\">Spirituality</option>\n                        <option value=\"Exercise\">Exercise</option>\n                        <option value=\"Errand\">Errand</option>\n                        <option value=\"Beauty\">Beauty</option>\n                        {/* <option value=\"9\">9</option>\n                        <option value=\"10\">10</option> */}\n                    </select>\n                </div>\n                <button className='button save' onClick={(e) => {\n                        let pts = parseInt(score)\n                        let cat = String(category)\n                        props.addTodo(title, pts, cat)\n                }}>Save</button>\n            </div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = () => {\n    return {\n        addTodo\n    }\n}\n\nexport default connect(null, mapDispatchToProps())(AddTodo)\n\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { completeTodo, deleteTodo, undoTodo } from '../../actions'\nimport './show-todo.css'\n\nfunction checkMark() {\n    return (\n        <div class=\"check\"></div>\n    )\n}\n\nfunction ShowTodo(props) {\n    const { index, completed, title, points, category } = props\n    const dispatch = useDispatch()\n    const buttonClass = completed ? 'done' : 'completed'\n    const check = checkMark()\n    return (\n        <div className='todo'>\n            <div>{ completed ? check : '' }</div>\n            <p className='title'>{ title }</p>\n            <p className='points'>{ points }</p>\n            <p className='category'>{ category }</p>\n            <div className='buttons'>\n                <button\n                    className= {`${buttonClass}`}\n                    onClick={(e) => {\n                        if(completed) {\n                            dispatch(undoTodo(index, points))\n                        } else {\n                            dispatch(completeTodo(index, points))\n                        }\n                    }}>{ completed ? 'Done!' : 'Complete' }\n                </button>\n                <div className='vertical'></div>\n                <button\n                    className='delete-button btn-medium'\n                    onClick={(e) => {\n                        dispatch(deleteTodo(index))\n                    }}>Delete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ShowTodo","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ShowTodo from './show-todo';\nimport './todo-list.css'\n\nclass TodoList extends Component {\n    getList() {\n        console.log(this.props.todos)\n        return this.props.todos.map((todo, index) => {\n            return (\n                    <ShowTodo\n                        key={index}\n                        index={index}\n                        title={todo.title}\n                        completed={todo.completed}\n                        points={todo.points}\n                        category={todo.category}\n                    />\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"list-table\">\n                <div className='table-heading'>\n                    <h2>Tasks</h2>\n                    <h2>Points</h2>\n                    <h2>Category</h2>\n                    <h2>Status</h2>\n                </div>\n                {this.getList()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        todos: state.todos\n    }\n}\n\nexport default connect(mapStateToProps)(TodoList)","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { clearTotal } from '../../actions';\nimport './point-total.css'\n\n\n\nfunction PointTotal(props) {\n        const dispatch = useDispatch()\n        const total = useSelector(state => state.total)\n        return (\n            <div className='total'>\n                <h3 className='point-display'>\n                    Total Points: {total}\n                    <button\n                        className='clear-button'\n                        onClick={(e) => {\n                                    dispatch(clearTotal())\n                                }\n                            }>Clear\n                    </button>\n                </h3>\n            </div>\n        )\n}\n\n\nexport default PointTotal","import React, { Component } from 'react';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers from '../reducers';\nimport Navbar from './Navbar/navbar'\nimport Footer from './Footer/footer'\nimport Todo from './Todo/add-todo'\nimport TodoList from './Todo/todo-list'\nimport PointTotal from './Todo/point-total'\nimport './App.css';\n\nconst TODO_STATE = 'TODO_STATE'\n\n// Load State\nexport const loadState = () => {\n  try{\n    const serializedState = localStorage.getItem(TODO_STATE)\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch (err) {\n    return undefined\n  }\n}\n\n// Save State\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem(TODO_STATE, serializedState)\n  } catch (err) {\n    console.log(\"Error saving data: \" + err)\n  }\n}\n\nconst persistedState = loadState()\nconst store = createStore(reducers, persistedState);\nstore.subscribe(() => {\n  saveState(store.getState())\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Navbar />\n        <div className=\"App\">\n          <TodoList />\n          <Todo />\n          <PointTotal />\n        </div>\n        <Footer />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}